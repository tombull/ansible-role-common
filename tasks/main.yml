---
# tasks file for common
- name: Install requirements
  package:
    name: '{{ common_requirements }}'
    state: present
  register: common_install_requirements
  until: common_install_requirements is succeeded
  retries: 3
  become: yes
  when:
    - ansible_pkg_mgr != 'unknown'
    - ansible_pkg_mgr != 'atomic_container'

- name: Check for network manager
  stat:
    path: /etc/NetworkManager/NetworkManager.conf
  register: common_check_for_network_manager
  become: yes

- name: Set nameserver in resolv.conf
  lineinfile:
    path: /etc/resolv.conf
    line: 'nameserver {{ item }}'
  with_items:
    - '{{ common_nameservers }}'
  when:
    - common_nameservers is defined
    - not common_check_for_network_manager.stat.exists
    - ansible_virtualization_type != "docker"
    - common_set_nameservers
  notify:
    - Gather facts
  become: yes

- name: Set nameservers in network manager
  ini_file:
    path: /etc/NetworkManager/conf.d/dnsservers.conf
    section: global-dns-domain-*
    option: servers
    value: "{{ common_nameservers | join(',') }}"
  when:
    - common_check_for_network_manager.stat.exists
    - common_set_nameservers
  notify:
    - Reload network manager
    - Gather facts
  become: yes

- name: Flush handlers
  meta: flush_handlers

- name: Set hostname
  hostname:
    name: '{{ hostname | default(ansible_host) }}'
  when:
    - ansible_virtualization_type != "docker"
  become: yes
  register: set_hostname

- name: Reboot for hostname
  include_role:
    name: reboot
  when:
    - set_hostname.changed
    - common_reboot | bool
  tags:
    - skip_ansible_lint

- name: Fill /etc/hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
  when:
    - ansible_virtualization_type != "docker"
    - common_set_hosts_file
